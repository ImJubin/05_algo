'''
문제 복기:
문제 개요:
N명의 야구 선수가 있고, 각 선수는 특정한 실력을 가지고 있다.

팀을 구성할 때, 특정 선수의 실력을 기준으로 그 선수보다 K만큼 낮거나 같은 실력을 가진 선수들만 포함할 수 있다.

하나의 팀에 포함될 수 있는 최대 선수 수를 구하는 문제.

입력:
T: 테스트 케이스의 개수

각 테스트 케이스에 대해:

N K: 선수의 수 N과 허용되는 실력 차이 K

N개의 정수: 각 선수의 실력 값

출력:
각 테스트 케이스마다 최대로 구성할 수 있는 팀원의 수를 출력

문제 설명을 정리하면:
주어진 선수들의 실력에서 특정 선수를 기준으로 실력 차이가 K 이하인 선수들을 모아 최대한 많은 팀원을 구성해야 함.

모든 선수를 기준으로 최대 가능한 팀원을 탐색하여 가장 큰 값을 출력.

이런 유형의 문제는 슬라이딩 윈도우나 정렬 후 투 포인터 기법을 활용하면 더 효율적으로 해결할 수 있습니다.
현재 코드에서는 O(N^2) 복잡도를 가지므로 N이 크면 비효율적일 수 있습니다.

3
4 2
6 4 2 3
4 3
1 2 3 4
4 1
1 3 7 5

answer
#1 3
#2 4
#3 1


'''
T = int(input())
for tc in range(1, T+1):
    N, K = map(int,input().split())
    player = list(map(int,input().split()))

    ans = 0

    for i in range(N):
        team = 0
        for j in range(N):
            if player[i]-K <= player[j] <= player[i]:
                team += 1
        ans = max(team,ans)
    print(f'#{tc} {ans}')